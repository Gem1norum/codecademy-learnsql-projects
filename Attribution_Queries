/*
Here's the first-touch query, in case you need it
*/

-- WITH first_touch AS (
--     SELECT user_id,
--         MIN(timestamp) as first_touch_at
--     FROM page_visits
--     GROUP BY user_id)
-- SELECT ft.user_id,
--     ft.first_touch_at,
--     pv.utm_source,
-- 		pv.utm_campaign
-- FROM first_touch ft
-- JOIN page_visits pv
--     ON ft.user_id = pv.user_id
--     AND ft.first_touch_at = pv.timestamp;

-- select count(distinct utm_campaign) from page_visits;
-- select distinct utm_campaign, count(*) from page_visits group by 1; -- these were to deremine the numebr of distinct campaigns

-- select distinct utm_source from page_visits; -- determining how many distinct sources there are
-- select distinct utm_source, utm_campaign from page_visits; --key to determine relationship between these two is using the distinct keyword

-- select distinct page_name from page_visits; --determining what pages are on the cooltshirts website

-- WITH first_touch AS (
--     SELECT user_id,
--         MIN(timestamp) as first_touch_at
--     FROM page_visits
--     GROUP BY user_id)
-- SELECT pv.utm_campaign, count(ft.first_touch_at) 
-- from page_visits pv 
-- join first_touch ft 
-- on pv.user_id = ft.user_id 
-- and pv.timestamp = ft.first_touch_at 
-- group by 1 
-- order by 2 desc; -- determining how many first touches each campaign is responsible for

-- with last_touch as (
--   select user_id, 
--   max(timestamp) as last_touch_at 
--   from page_visits 
--   group by user_id
-- ) 
-- select pv.utm_campaign, count(*) 
-- from page_visits pv 
-- join last_touch lt 
-- on pv.user_id = lt.user_id 
-- and pv.timestamp = lt.last_touch_at 
-- group by 1 
-- order by 2 desc; -- determining how many last touches each campaign is responsible for

-- select distinct user_id from page_visits where page_name = '4 - purchase';

with last_touch as (
  select user_id, 
  max(timestamp) as last_touch_at 
  from page_visits 
  group by user_id
) 
select pv.utm_campaign, count(*) 
from page_visits pv 
join last_touch lt 
on pv.user_id = lt.user_id 
and pv.timestamp = lt.last_touch_at 
where page_name = '4 - purchase' 
group by 1 
order by 2 desc; -- determining how many last touches on the purchase page each campaign is responsible for


--if cooltshirts can reinvest in 5 campaigns, it should be weekly-newsletter, retargetting-ad, retargetting-campaign, paid-search, and ten-crazy-cool-tshirts-facts, and to consider investments in that order. This is because as a result of the last query, these five in that order are responsible for the most last touches on the purchase page, and therefore more likely to lead customers to purchase compared to other campaigns. 
