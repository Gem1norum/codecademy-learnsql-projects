-- select * from employees; --contains foreign key current_project
-- select * from projects;

-- select first_name, last_name from employees where current_project is null; -- names of employees who have not chosen a project

-- select project_name from projects where project_id not in (
--   select current_project 
--   from employees 
--   where current_project is not null
-- ); -- determining project names of unselected projects

-- select projects.project_name, count(*) from projects 
-- join employees 
-- on projects.project_id = employees.current_project 
-- group by 1 
-- order by 2 desc; --finding name of project chosen by most employees. We can also see that rocketrush and extremejets were among the 3 that are chosen by multiple employees

-- select count(*)*2 as 'number of developers needed' from projects;
-- select count(*) from employees where position like '%developer%'; -- in these two lines we determine in a very simplistic way how many developer positions are available based on the assumption that at least 2 developers are needed for each project, and determine how many developers are on the team. As we can see, there are 11 less developers than needed.

-- select personality, count(*) as 'number of employees with personality'  from employees group by personality order by 2 desc; -- from this we see enfj is the most common personlaity type

-- select projects.project_name as 'project_name' from projects 
-- join employees 
-- on projects.project_id = employees.current_project 
-- where employees.personality = 'ENFJ'; -- determining names of projects chosen by employees with the most common personality type

-- select personality from employees 
-- where current_project is not null 
-- group by personality 
-- order by personality 
-- limit 1 -- creating my subquery of finding most popular personality type

-- select first_name, last_name, personality, project_name from employees 
-- join projects 
-- on employees.current_project = projects.project_id 
-- where personality = ( 
--   select personality from employees 
--   where current_project is not null 
--   group by personality 
--   order by personality 
--   limit 1
-- ); -- using a subquery (in brackets) to dertermine the most common personality type before generating a table result for names and project names associated with ENFJ employees

select first_name, last_name, project_name, 
case 
  when personality = 'INFP' 
  then  (
    select count(*) from employees 
    where personality in ('ISFP', 'ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ')
  )
  when personality = 'ENFP' 
  then (
    select count(*) from employees 
    where personality in ('ISFP', 'ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ')
  )
  when personality = 'INFJ' 
  then (
    select count(*) from employees 
    where personality in ('ISFP', 'ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ')
  )
  when personality = 'ENFJ' 
  then (
    select count(*) from employees 
    where personality in ('ESFP', 'ISTP', 'ESTP', 'ISFJ', 'ESFJ', 'ISTJ', 'ESTJ')
  )
  when personality = 'ISFP' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ')
  )
  when personality = 'ESFP' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ', 'ENFJ')
  )
  when personality = 'ISTP' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ', 'ENFJ')
  )
  when personality = 'ESTP' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ', 'ENFJ')
  )
  when personality = 'ISFJ' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ', 'ENFJ')
  )
  when personality = 'ESFJ' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ', 'ENFJ')
  )
  when personality = 'ISTJ' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ', 'ENFJ')
  )
  when personality = 'ESTJ' 
  then (
    select count(*) from employees 
    where personality in ('INFP', 'ENFP', 'INFJ', 'ENFJ')
  ) 
end as 'incompatibility' 
from employees
left join projects 
on employees.current_project = projects.project_id; --creating a record of all employees and their project names, as well as the number of co workers that they are incompatible with based off their personality types. 'Incompatitbility' is calculated using a case statement that counts how many employees have a personality type that is incompatible with a given personality, and is assigned to an employee.
